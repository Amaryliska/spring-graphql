plugins {
	id 'org.jetbrains.kotlin.jvm' version '1.6.21' apply false
}

ext {
	moduleProjects = [project(":spring-graphql"), project(":spring-graphql-test")]
	graphQlJavaVersion = "18.3"
	bootVersion = "2.7.9"
}

description = "Spring for GraphQL"

subprojects {
	group = 'org.springframework.graphql'

	repositories {
		mavenCentral()
		if (version.contains('-')) {
			maven { url "https://repo.spring.io/milestone" }
		}
		if (version.endsWith('-SNAPSHOT')) {
			maven { url "https://repo.spring.io/snapshot" }
		}
	}
}

configure(moduleProjects) {
	apply plugin: 'java-library'
	apply plugin: 'java-test-fixtures'
	apply plugin: 'org.springframework.graphql.compiler'

	java {
		toolchain {
			languageVersion = JavaLanguageVersion.of(8)
		}
	}

	pluginManager.withPlugin("kotlin") {
		compileKotlin {
			kotlinOptions {
				jvmTarget = "1.8"
				languageVersion = "1.3"
				apiVersion = "1.3"
				freeCompilerArgs = ["-Xjsr305=strict", "-Xsuppress-version-warnings", "-opt-in=kotlin.RequiresOptIn"]
				allWarningsAsErrors = true
			}
		}
		compileTestKotlin {
			kotlinOptions {
				jvmTarget = "1.8"
				freeCompilerArgs = ["-Xjsr305=strict"]
			}
		}
	}

	configurations {
		dependencyManagement {
			canBeConsumed = false
			canBeResolved = false
			visible = false
		}
		matching { it.name.endsWith("Classpath") }.all { it.extendsFrom(dependencyManagement) }
	}

	dependencies {
		dependencyManagement(enforcedPlatform(dependencies.project(path: ":platform")))
	}

	ext.javadocLinks = [
			"https://docs.oracle.com/javase/8/docs/api/",
			"https://docs.spring.io/spring-framework/docs/5.3.x/javadoc-api/",
			"https://javadoc.io/doc/com.graphql-java/graphql-java/18.1/"
	] as String[]

	components.java.withVariantsFromConfiguration(configurations.testFixturesApiElements) { skip() }
	components.java.withVariantsFromConfiguration(configurations.testFixturesRuntimeElements) { skip() }
	
	apply from: "${rootDir}/gradle/publishing.gradle"
}
